/*! Copyright (C) 2009 Apertus, All Rights Reserved
 *! Author : Apertus Team
-----------------------------------------------------------------------------**
 *!
 *!  This program is free software: you can redistribute it and/or modify
 *!  it under the terms of the GNU General Public License as published by
 *!  the Free Software Foundation, either version 3 of the License, or
 *!  (at your option) any later version.
 *!
 *!  This program is distributed in the hope that it will be useful,
 *!  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *!  GNU General Public License for more details.
 *!
 *!  You should have received a copy of the GNU General Public License
 *!  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *!
-----------------------------------------------------------------------------**/

import java.awt.CardLayout;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioFormat;
import javax.swing.JScrollBar;

public class Settings3Layout extends javax.swing.JPanel {

    /**
	 * 
	 */
	private static final long serialVersionUID = 2760879519908188258L;
	ElphelVision Parent;

    public Settings3Layout(ElphelVision parent) {
        Parent = parent;

        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {

                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void Load() {
        MultiCameraRecordingDelayField.setText(String.valueOf(Parent.Camera.GetMultiCameraRecordingStartDelay()));

        MovieSplitSizeField.setText(String.valueOf(Parent.Camera.GetMovieClipMaxChunkSize()));
        MovieSplitDurationField.setText(String.valueOf(Parent.Camera.getMovieClipMaxChunkDuration()));
        MovieSplitFramesField.setText(String.valueOf(Parent.Camera.getMovieClipMaxChunkFrames()));

        if (Parent.Settings.isVideoStreamEnabled()) {
            LiveVideoEnabledButton.setChecked(true);
            LiveVideoEnabledButton.setText("Enabled");
        } else {
            LiveVideoEnabledButton.setChecked(false);
            LiveVideoEnabledButton.setText("Disabled");
        }

        AudioDevices.removeAllItems();
        String[] audio_devices = Parent.Utils.SoundRecorder.GetAvailableAudioMixers();
        for (int i = 0; i < audio_devices.length; i++) {
            if (audio_devices[i] != null) {
                AudioDevices.addItem(new KeyValue(i, audio_devices[i]));
            }
        }

        MasterCameraNameField.setText(Parent.Camera.getStereoCameraNames()[0]);
        SlaveCameraNameField.setText(Parent.Camera.getStereoCameraNames()[1]);
        SingleCameraNameField.setText(Parent.Camera.getSingleCameraName());
        if (Parent.Camera.GetIP().length > 1) {
            SingleCameraPanel.setEnabled(false);
        } else {
            MasterCameraPanel.setEnabled(false);
            SlaveCameraPanel.setEnabled(false);
        }
    }

    public class KeyValue {

        private int key;
        private String value;

        public KeyValue(int key, String value) {
            this.key = key;
            this.value = value;
        }

        public int getKey() {
            return key;
        }

        public String getValue() {
            return value;
        }

        public String toString() {
            return value;
        }
    }

    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        bg = new javax.swing.JPanel();
        ConfirmationPanel = new javax.swing.JPanel();
        SettingsOKButton = new EButton(Parent);
        SettingsCancelButton = new EButton(Parent);
        NavigationPanel1 = new javax.swing.JPanel();
        SettingsMenu1Button1 = new EButton(Parent);
        SettingsMenu2Button1 = new EButton(Parent);
        GuidesMenuButton1 = new EButton(Parent);
        SettingsMenu3Button = new EButton(Parent);
        PhotoSettingsMenu = new EButton(Parent);
        jScrollPane1 = new javax.swing.JScrollPane();
        ePanel1 = new EPanel();
        ePanel2 = new EPanel();
        MulitCameraRecordingDelay = new javax.swing.JLabel();
        AudioDevices = new javax.swing.JComboBox();
        ePanel3 = new EPanel();
        MovieSplitSizeLabel = new javax.swing.JLabel();
        MovieSplitSizeField = new javax.swing.JTextField();
        MovieSplitSizeType = new EButton(Parent);
        ePanel4 = new EPanel();
        MulitCameraRecordingDelay1 = new javax.swing.JLabel();
        MultiCameraRecordingDelayField = new javax.swing.JTextField();
        MulitCameraRecordingDelayType = new EButton(Parent);
        ePanel5 = new EPanel();
        MulitCameraRecordingDelay2 = new javax.swing.JLabel();
        AudioFormats = new javax.swing.JComboBox();
        ePanel6 = new EPanel();
        LiveVideoLabel = new javax.swing.JLabel();
        LiveVideoEnabledButton = new EButton(Parent);
        ePanel7 = new EPanel();
        MovieSplitSizeLabel1 = new javax.swing.JLabel();
        MovieSplitDurationField = new javax.swing.JTextField();
        MovieSplitDurationType = new EButton(Parent);
        ePanel8 = new EPanel();
        MovieSplitSizeLabel2 = new javax.swing.JLabel();
        MovieSplitFramesField = new javax.swing.JTextField();
        MovieSplitFramesType = new EButton(Parent);
        SlaveCameraPanel = new EPanel();
        LiveVideoLabel1 = new javax.swing.JLabel();
        SlaveCameraNameField = new javax.swing.JTextField();
        MasterCameraPanel = new EPanel();
        LiveVideoLabel2 = new javax.swing.JLabel();
        MasterCameraNameField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        SingleCameraPanel = new EPanel();
        LiveVideoLabel3 = new javax.swing.JLabel();
        SingleCameraNameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        bg.setBackground(new java.awt.Color(0, 0, 0));
        bg.setPreferredSize(new java.awt.Dimension(1024, 600));

        ConfirmationPanel.setBackground(java.awt.Color.black);

        SettingsOKButton.setText("OK");
        SettingsOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsOKButtonActionPerformed(evt);
            }
        });

        SettingsCancelButton.setText("Cancel");
        SettingsCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ConfirmationPanelLayout = new javax.swing.GroupLayout(ConfirmationPanel);
        ConfirmationPanel.setLayout(ConfirmationPanelLayout);
        ConfirmationPanelLayout.setHorizontalGroup(
            ConfirmationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConfirmationPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(SettingsOKButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SettingsCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        ConfirmationPanelLayout.setVerticalGroup(
            ConfirmationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConfirmationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(SettingsCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(SettingsOKButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        NavigationPanel1.setBackground(java.awt.Color.black);

        SettingsMenu1Button1.setText("Settings Tab 1");
        SettingsMenu1Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsMenu1Button1ActionPerformed(evt);
            }
        });

        SettingsMenu2Button1.setText("Settings Tab 2");
        SettingsMenu2Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsMenu2Button1ActionPerformed(evt);
            }
        });

        GuidesMenuButton1.setText("Guides");
        GuidesMenuButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuidesMenuButton1ActionPerformed(evt);
            }
        });

        SettingsMenu3Button.setText("Settings Tab 3");
        SettingsMenu3Button.setChecked(true);
        SettingsMenu3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsMenu3ButtonActionPerformed(evt);
            }
        });

        PhotoSettingsMenu.setText("Photo Settings");
        PhotoSettingsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhotoSettingsMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NavigationPanel1Layout = new javax.swing.GroupLayout(NavigationPanel1);
        NavigationPanel1.setLayout(NavigationPanel1Layout);
        NavigationPanel1Layout.setHorizontalGroup(
            NavigationPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavigationPanel1Layout.createSequentialGroup()
                .addComponent(SettingsMenu1Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SettingsMenu2Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SettingsMenu3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(GuidesMenuButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PhotoSettingsMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        NavigationPanel1Layout.setVerticalGroup(
            NavigationPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavigationPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(SettingsMenu1Button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(SettingsMenu2Button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(SettingsMenu3Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(GuidesMenuButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(PhotoSettingsMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setViewportBorder(null);
        jScrollPane1.setAlignmentX(0.0F);
        jScrollPane1.setAlignmentY(0.0F);

        ePanel1.setBackground(new java.awt.Color(13, 20, 27));
        ePanel1.setAutoscrolls(true);
        ePanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ePanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ePanel1MousePressed(evt);
            }
        });
        ePanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                ePanel1MouseDragged(evt);
            }
        });

        ePanel2.setBackground(new java.awt.Color(39, 39, 41));
        ePanel2.setBorder(null);
        ePanel2.setForeground(new java.awt.Color(80, 80, 80));

        MulitCameraRecordingDelay.setBackground(new java.awt.Color(1, 1, 1));
        MulitCameraRecordingDelay.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        MulitCameraRecordingDelay.setForeground(new java.awt.Color(255, 255, 255));
        MulitCameraRecordingDelay.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MulitCameraRecordingDelay.setText("Audio Devices");
        MulitCameraRecordingDelay.setAlignmentY(0.0F);
        MulitCameraRecordingDelay.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        MulitCameraRecordingDelay.setIconTextGap(0);
        MulitCameraRecordingDelay.setInheritsPopupMenu(false);
        MulitCameraRecordingDelay.setRequestFocusEnabled(false);
        MulitCameraRecordingDelay.setVerifyInputWhenFocusTarget(false);
        MulitCameraRecordingDelay.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        AudioDevices.setFont(new java.awt.Font("DejaVu Sans", 0, 8));
        AudioDevices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AudioDevicesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ePanel2Layout = new javax.swing.GroupLayout(ePanel2);
        ePanel2.setLayout(ePanel2Layout);
        ePanel2Layout.setHorizontalGroup(
            ePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ePanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MulitCameraRecordingDelay)
                .addGap(18, 18, 18)
                .addComponent(AudioDevices, 0, 341, Short.MAX_VALUE)
                .addContainerGap())
        );
        ePanel2Layout.setVerticalGroup(
            ePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ePanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AudioDevices, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addGap(15, 15, 15))
            .addGroup(ePanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(MulitCameraRecordingDelay)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        ePanel1.add(ePanel2);

        ePanel3.setBackground(new java.awt.Color(39, 39, 41));
        ePanel3.setBorder(null);
        ePanel3.setForeground(new java.awt.Color(80, 80, 80));

        MovieSplitSizeLabel.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        MovieSplitSizeLabel.setForeground(new java.awt.Color(255, 255, 255));
        MovieSplitSizeLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MovieSplitSizeLabel.setText("Movie Split Size [MB]");
        MovieSplitSizeLabel.setAlignmentY(0.0F);
        MovieSplitSizeLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        MovieSplitSizeLabel.setIconTextGap(0);
        MovieSplitSizeLabel.setInheritsPopupMenu(false);
        MovieSplitSizeLabel.setRequestFocusEnabled(false);
        MovieSplitSizeLabel.setVerifyInputWhenFocusTarget(false);
        MovieSplitSizeLabel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        MovieSplitSizeField.setBackground(new java.awt.Color(0, 0, 0));
        MovieSplitSizeField.setForeground(new java.awt.Color(255, 255, 255));
        MovieSplitSizeField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MovieSplitSizeField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        MovieSplitSizeField.setCaretColor(new java.awt.Color(254, 254, 254));
        MovieSplitSizeField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                MovieSplitSizeFieldCaretUpdate(evt);
            }
        });

        MovieSplitSizeType.setText("type");
        MovieSplitSizeType.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        MovieSplitSizeType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MovieSplitSizeTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ePanel3Layout = new javax.swing.GroupLayout(ePanel3);
        ePanel3.setLayout(ePanel3Layout);
        ePanel3Layout.setHorizontalGroup(
            ePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ePanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MovieSplitSizeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                .addComponent(MovieSplitSizeField, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(MovieSplitSizeType, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ePanel3Layout.setVerticalGroup(
            ePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ePanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(MovieSplitSizeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MovieSplitSizeType, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                        .addComponent(MovieSplitSizeField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(83, 83, 83))
        );

        ePanel1.add(ePanel3);

        ePanel4.setBackground(new java.awt.Color(39, 39, 41));
        ePanel4.setBorder(null);
        ePanel4.setForeground(new java.awt.Color(80, 80, 80));

        MulitCameraRecordingDelay1.setBackground(new java.awt.Color(1, 1, 1));
        MulitCameraRecordingDelay1.setForeground(new java.awt.Color(255, 255, 255));
        MulitCameraRecordingDelay1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MulitCameraRecordingDelay1.setText("Multi Camera Recording Delay [seconds]");
        MulitCameraRecordingDelay1.setAlignmentY(0.0F);
        MulitCameraRecordingDelay1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        MulitCameraRecordingDelay1.setIconTextGap(0);
        MulitCameraRecordingDelay1.setInheritsPopupMenu(false);
        MulitCameraRecordingDelay1.setRequestFocusEnabled(false);
        MulitCameraRecordingDelay1.setVerifyInputWhenFocusTarget(false);
        MulitCameraRecordingDelay1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        MultiCameraRecordingDelayField.setBackground(new java.awt.Color(0, 0, 0));
        MultiCameraRecordingDelayField.setForeground(new java.awt.Color(255, 255, 255));
        MultiCameraRecordingDelayField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MultiCameraRecordingDelayField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        MultiCameraRecordingDelayField.setCaretColor(new java.awt.Color(254, 254, 254));
        MultiCameraRecordingDelayField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                MultiCameraRecordingDelayFieldCaretUpdate(evt);
            }
        });

        MulitCameraRecordingDelayType.setText("type");
        MulitCameraRecordingDelayType.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        MulitCameraRecordingDelayType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MulitCameraRecordingDelayTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ePanel4Layout = new javax.swing.GroupLayout(ePanel4);
        ePanel4.setLayout(ePanel4Layout);
        ePanel4Layout.setHorizontalGroup(
            ePanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ePanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MulitCameraRecordingDelay1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(MultiCameraRecordingDelayField, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(MulitCameraRecordingDelayType, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ePanel4Layout.setVerticalGroup(
            ePanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ePanel4Layout.createSequentialGroup()
                .addGroup(ePanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ePanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(MulitCameraRecordingDelay1, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ePanel4Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(ePanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MulitCameraRecordingDelayType, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(MultiCameraRecordingDelayField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ePanel1.add(ePanel4);

        ePanel5.setBackground(new java.awt.Color(39, 39, 41));
        ePanel5.setBorder(null);
        ePanel5.setForeground(new java.awt.Color(80, 80, 80));

        MulitCameraRecordingDelay2.setBackground(new java.awt.Color(1, 1, 1));
        MulitCameraRecordingDelay2.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        MulitCameraRecordingDelay2.setForeground(new java.awt.Color(255, 255, 255));
        MulitCameraRecordingDelay2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MulitCameraRecordingDelay2.setText("Audio Recording Formats");
        MulitCameraRecordingDelay2.setAlignmentY(0.0F);
        MulitCameraRecordingDelay2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        MulitCameraRecordingDelay2.setIconTextGap(0);
        MulitCameraRecordingDelay2.setInheritsPopupMenu(false);
        MulitCameraRecordingDelay2.setRequestFocusEnabled(false);
        MulitCameraRecordingDelay2.setVerifyInputWhenFocusTarget(false);
        MulitCameraRecordingDelay2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        AudioFormats.setFont(new java.awt.Font("DejaVu Sans", 0, 8));

        javax.swing.GroupLayout ePanel5Layout = new javax.swing.GroupLayout(ePanel5);
        ePanel5.setLayout(ePanel5Layout);
        ePanel5Layout.setHorizontalGroup(
            ePanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ePanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MulitCameraRecordingDelay2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AudioFormats, 0, 277, Short.MAX_VALUE)
                .addContainerGap())
        );
        ePanel5Layout.setVerticalGroup(
            ePanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ePanel5Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(ePanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MulitCameraRecordingDelay2)
                    .addComponent(AudioFormats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        ePanel1.add(ePanel5);

        ePanel6.setBackground(new java.awt.Color(39, 39, 41));
        ePanel6.setBorder(null);
        ePanel6.setForeground(new java.awt.Color(80, 80, 80));

        LiveVideoLabel.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        LiveVideoLabel.setForeground(new java.awt.Color(255, 255, 255));
        LiveVideoLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LiveVideoLabel.setText("Live Video");
        LiveVideoLabel.setAlignmentY(0.0F);
        LiveVideoLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        LiveVideoLabel.setIconTextGap(0);
        LiveVideoLabel.setInheritsPopupMenu(false);
        LiveVideoLabel.setRequestFocusEnabled(false);
        LiveVideoLabel.setVerifyInputWhenFocusTarget(false);
        LiveVideoLabel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        LiveVideoEnabledButton.setText("Enabled");
        LiveVideoEnabledButton.setChecked(true);
        LiveVideoEnabledButton.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        LiveVideoEnabledButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LiveVideoEnabledButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ePanel6Layout = new javax.swing.GroupLayout(ePanel6);
        ePanel6.setLayout(ePanel6Layout);
        ePanel6Layout.setHorizontalGroup(
            ePanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ePanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LiveVideoLabel)
                .addGap(304, 304, 304)
                .addComponent(LiveVideoEnabledButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ePanel6Layout.setVerticalGroup(
            ePanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ePanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ePanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ePanel6Layout.createSequentialGroup()
                        .addComponent(LiveVideoEnabledButton, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(ePanel6Layout.createSequentialGroup()
                        .addComponent(LiveVideoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                        .addGap(13, 13, 13))))
        );

        ePanel1.add(ePanel6);

        ePanel7.setBackground(new java.awt.Color(39, 39, 41));
        ePanel7.setBorder(null);
        ePanel7.setForeground(new java.awt.Color(80, 80, 80));

        MovieSplitSizeLabel1.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        MovieSplitSizeLabel1.setForeground(new java.awt.Color(255, 255, 255));
        MovieSplitSizeLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MovieSplitSizeLabel1.setText("Movie Split Duration [seconds]");
        MovieSplitSizeLabel1.setAlignmentY(0.0F);
        MovieSplitSizeLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        MovieSplitSizeLabel1.setIconTextGap(0);
        MovieSplitSizeLabel1.setInheritsPopupMenu(false);
        MovieSplitSizeLabel1.setRequestFocusEnabled(false);
        MovieSplitSizeLabel1.setVerifyInputWhenFocusTarget(false);
        MovieSplitSizeLabel1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        MovieSplitDurationField.setBackground(new java.awt.Color(0, 0, 0));
        MovieSplitDurationField.setForeground(new java.awt.Color(255, 255, 255));
        MovieSplitDurationField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MovieSplitDurationField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        MovieSplitDurationField.setCaretColor(new java.awt.Color(254, 254, 254));
        MovieSplitDurationField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                MovieSplitDurationFieldCaretUpdate(evt);
            }
        });

        MovieSplitDurationType.setText("type");
        MovieSplitDurationType.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        MovieSplitDurationType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MovieSplitDurationTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ePanel7Layout = new javax.swing.GroupLayout(ePanel7);
        ePanel7.setLayout(ePanel7Layout);
        ePanel7Layout.setHorizontalGroup(
            ePanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ePanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MovieSplitSizeLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(MovieSplitDurationField, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(MovieSplitDurationType, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ePanel7Layout.setVerticalGroup(
            ePanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ePanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ePanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(MovieSplitSizeLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ePanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MovieSplitDurationType, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                        .addComponent(MovieSplitDurationField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(83, 83, 83))
        );

        ePanel1.add(ePanel7);

        ePanel8.setBackground(new java.awt.Color(39, 39, 41));
        ePanel8.setBorder(null);
        ePanel8.setForeground(new java.awt.Color(80, 80, 80));

        MovieSplitSizeLabel2.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        MovieSplitSizeLabel2.setForeground(new java.awt.Color(255, 255, 255));
        MovieSplitSizeLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MovieSplitSizeLabel2.setText("Movie Split Frames");
        MovieSplitSizeLabel2.setAlignmentY(0.0F);
        MovieSplitSizeLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        MovieSplitSizeLabel2.setIconTextGap(0);
        MovieSplitSizeLabel2.setInheritsPopupMenu(false);
        MovieSplitSizeLabel2.setRequestFocusEnabled(false);
        MovieSplitSizeLabel2.setVerifyInputWhenFocusTarget(false);
        MovieSplitSizeLabel2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        MovieSplitFramesField.setBackground(new java.awt.Color(0, 0, 0));
        MovieSplitFramesField.setForeground(new java.awt.Color(255, 255, 255));
        MovieSplitFramesField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MovieSplitFramesField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        MovieSplitFramesField.setCaretColor(new java.awt.Color(254, 254, 254));
        MovieSplitFramesField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                MovieSplitFramesFieldCaretUpdate(evt);
            }
        });

        MovieSplitFramesType.setText("type");
        MovieSplitFramesType.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        MovieSplitFramesType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MovieSplitFramesTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ePanel8Layout = new javax.swing.GroupLayout(ePanel8);
        ePanel8.setLayout(ePanel8Layout);
        ePanel8Layout.setHorizontalGroup(
            ePanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ePanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MovieSplitSizeLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                .addComponent(MovieSplitFramesField, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(MovieSplitFramesType, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ePanel8Layout.setVerticalGroup(
            ePanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ePanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ePanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(MovieSplitSizeLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ePanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MovieSplitFramesType, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(MovieSplitFramesField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(83, 83, 83))
        );

        ePanel1.add(ePanel8);

        SlaveCameraPanel.setBackground(new java.awt.Color(39, 39, 41));
        SlaveCameraPanel.setBorder(null);
        SlaveCameraPanel.setForeground(new java.awt.Color(80, 80, 80));

        LiveVideoLabel1.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        LiveVideoLabel1.setForeground(new java.awt.Color(255, 255, 255));
        LiveVideoLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LiveVideoLabel1.setText("Slave Camera Name");
        LiveVideoLabel1.setAlignmentY(0.0F);
        LiveVideoLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        LiveVideoLabel1.setIconTextGap(0);
        LiveVideoLabel1.setInheritsPopupMenu(false);
        LiveVideoLabel1.setRequestFocusEnabled(false);
        LiveVideoLabel1.setVerifyInputWhenFocusTarget(false);
        LiveVideoLabel1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        SlaveCameraNameField.setBackground(new java.awt.Color(0, 0, 0));
        SlaveCameraNameField.setForeground(new java.awt.Color(255, 255, 255));
        SlaveCameraNameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SlaveCameraNameField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        SlaveCameraNameField.setCaretColor(new java.awt.Color(254, 254, 254));
        SlaveCameraNameField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                SlaveCameraNameFieldCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout SlaveCameraPanelLayout = new javax.swing.GroupLayout(SlaveCameraPanel);
        SlaveCameraPanel.setLayout(SlaveCameraPanelLayout);
        SlaveCameraPanelLayout.setHorizontalGroup(
            SlaveCameraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SlaveCameraPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LiveVideoLabel1)
                .addGap(131, 131, 131)
                .addComponent(SlaveCameraNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addContainerGap())
        );
        SlaveCameraPanelLayout.setVerticalGroup(
            SlaveCameraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SlaveCameraPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SlaveCameraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SlaveCameraPanelLayout.createSequentialGroup()
                        .addComponent(SlaveCameraNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(SlaveCameraPanelLayout.createSequentialGroup()
                        .addComponent(LiveVideoLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                        .addGap(13, 13, 13))))
        );

        ePanel1.add(SlaveCameraPanel);

        MasterCameraPanel.setBackground(new java.awt.Color(39, 39, 41));
        MasterCameraPanel.setBorder(null);
        MasterCameraPanel.setForeground(new java.awt.Color(80, 80, 80));

        LiveVideoLabel2.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        LiveVideoLabel2.setForeground(new java.awt.Color(255, 255, 255));
        LiveVideoLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LiveVideoLabel2.setText("Master Camera Name");
        LiveVideoLabel2.setAlignmentY(0.0F);
        LiveVideoLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        LiveVideoLabel2.setIconTextGap(0);
        LiveVideoLabel2.setInheritsPopupMenu(false);
        LiveVideoLabel2.setRequestFocusEnabled(false);
        LiveVideoLabel2.setVerifyInputWhenFocusTarget(false);
        LiveVideoLabel2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        MasterCameraNameField.setBackground(new java.awt.Color(0, 0, 0));
        MasterCameraNameField.setForeground(new java.awt.Color(255, 255, 255));
        MasterCameraNameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MasterCameraNameField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        MasterCameraNameField.setCaretColor(new java.awt.Color(254, 254, 254));
        MasterCameraNameField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                MasterCameraNameFieldCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout MasterCameraPanelLayout = new javax.swing.GroupLayout(MasterCameraPanel);
        MasterCameraPanel.setLayout(MasterCameraPanelLayout);
        MasterCameraPanelLayout.setHorizontalGroup(
            MasterCameraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MasterCameraPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LiveVideoLabel2)
                .addGap(121, 121, 121)
                .addComponent(MasterCameraNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addContainerGap())
        );
        MasterCameraPanelLayout.setVerticalGroup(
            MasterCameraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MasterCameraPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MasterCameraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(MasterCameraNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LiveVideoLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(13, 13, 13))
        );

        ePanel1.add(MasterCameraPanel);

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 1, 14));
        jLabel1.setForeground(new java.awt.Color(254, 254, 254));
        jLabel1.setText("Movie File Size Settings");
        ePanel1.add(jLabel1);

        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 1, 14));
        jLabel2.setForeground(new java.awt.Color(254, 254, 254));
        jLabel2.setText("Stereo 3D Settings");
        ePanel1.add(jLabel2);

        jLabel3.setFont(new java.awt.Font("DejaVu Sans", 1, 14));
        jLabel3.setForeground(new java.awt.Color(254, 254, 254));
        jLabel3.setText("Audio Settings");
        ePanel1.add(jLabel3);

        SingleCameraPanel.setBackground(new java.awt.Color(39, 39, 41));
        SingleCameraPanel.setBorder(null);
        SingleCameraPanel.setForeground(new java.awt.Color(80, 80, 80));

        LiveVideoLabel3.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        LiveVideoLabel3.setForeground(new java.awt.Color(255, 255, 255));
        LiveVideoLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LiveVideoLabel3.setText("Single Camera Name");
        LiveVideoLabel3.setAlignmentY(0.0F);
        LiveVideoLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        LiveVideoLabel3.setIconTextGap(0);
        LiveVideoLabel3.setInheritsPopupMenu(false);
        LiveVideoLabel3.setRequestFocusEnabled(false);
        LiveVideoLabel3.setVerifyInputWhenFocusTarget(false);
        LiveVideoLabel3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        SingleCameraNameField.setBackground(new java.awt.Color(0, 0, 0));
        SingleCameraNameField.setForeground(new java.awt.Color(255, 255, 255));
        SingleCameraNameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SingleCameraNameField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        SingleCameraNameField.setCaretColor(new java.awt.Color(254, 254, 254));
        SingleCameraNameField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                SingleCameraNameFieldCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout SingleCameraPanelLayout = new javax.swing.GroupLayout(SingleCameraPanel);
        SingleCameraPanel.setLayout(SingleCameraPanelLayout);
        SingleCameraPanelLayout.setHorizontalGroup(
            SingleCameraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SingleCameraPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LiveVideoLabel3)
                .addGap(126, 126, 126)
                .addComponent(SingleCameraNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addContainerGap())
        );
        SingleCameraPanelLayout.setVerticalGroup(
            SingleCameraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SingleCameraPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SingleCameraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SingleCameraNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LiveVideoLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(13, 13, 13))
        );

        ePanel1.add(SingleCameraPanel);

        jLabel4.setFont(new java.awt.Font("DejaVu Sans", 1, 14));
        jLabel4.setForeground(new java.awt.Color(254, 254, 254));
        jLabel4.setText("Camera Names Settings");
        ePanel1.add(jLabel4);

        jLabel5.setFont(new java.awt.Font("DejaVu Sans", 1, 14));
        jLabel5.setForeground(new java.awt.Color(254, 254, 254));
        jLabel5.setText("Video Stream Settings");
        ePanel1.add(jLabel5);

        jScrollPane1.setViewportView(ePanel1);

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                        .addComponent(NavigationPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ConfirmationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ConfirmationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NavigationPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>                        

    private void SettingsOKButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        Parent.Camera.SetMovieClipMaxChunkSize(Integer.parseInt(MovieSplitSizeField.getText()));
        Parent.Camera.setMovieClipMaxChunkDuration(Integer.parseInt(MovieSplitDurationField.getText()));
        Parent.Camera.setMovieClipMaxChunkFrames(Integer.parseInt(MovieSplitFramesField.getText()));

        Parent.Camera.SetMultiCameraRecordingStartDelay(Float.parseFloat(MultiCameraRecordingDelayField.getText()));

        Parent.Utils.SoundRecorder.SetFilename("temp.wav");
        int AudioDeviceObjectKey = ((KeyValue) (AudioDevices.getSelectedObjects()[0])).getKey();
        int AudioFormatObjectKey = ((KeyValue) (AudioFormats.getSelectedObjects()[0])).getKey();
        Parent.Utils.SoundRecorder.SetAudioOptions(AudioDeviceObjectKey, AudioFormatObjectKey);

        if (Parent.Camera.GetIP().length > 1) {
            Parent.Camera.setStereoCameraName(MasterCameraNameField.getText(), 0);
            Parent.Camera.setStereoCameraName(SlaveCameraNameField.getText(), 1);
        } else {
            Parent.Camera.setSingleCameraName(SingleCameraNameField.getText());
        }

        try { // Save to config file
            Parent.Camera.WriteConfigFile("autosave.config");
        } catch (IOException ex) {
            Logger.getLogger(Settings1Layout.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (LiveVideoEnabledButton.isChecked()) {
            Parent.Settings.setVideoStreamEnabled(true);
        } else {
            Parent.Settings.setVideoStreamEnabled(false);
        }

        Parent.Utils.SoundRecorder.StartMonitor();

        Parent.LoadMainCard();
    }                                                

    private void SettingsCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        Parent.StopVideoPlayer();
        Parent.LoadMainCard();
    }                                                    

    private void SettingsMenu1Button1ActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "Settings1Card");
        Parent.StopVideoPlayer();
}                                                    

    private void SettingsMenu2Button1ActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "Settings2Card");
        Parent.Settings2CardLayout.Load();
}                                                    

    private void GuidesMenuButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "GuidesCard");
        Parent.GuidesPanel.Load();
}                                                 

    private void SettingsMenu3ButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
}                                                   

    private void PhotoSettingsMenuActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        Parent.PhotoSettingsCardLayout.Load();
        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "PhotoSettings");
}                                                 

    private void MovieSplitSizeFieldCaretUpdate(javax.swing.event.CaretEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void MovieSplitSizeTypeActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        Parent.NumberPanelInteger.Load("Movie Split Size [MB]", Integer.parseInt(MovieSplitSizeField.getText()), MovieSplitSizeField, "Settings3Card");
        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "NumberpanelInteger");
    }                                                  

    private void MultiCameraRecordingDelayFieldCaretUpdate(javax.swing.event.CaretEvent evt) {                                                           
        // TODO add your handling code here:
    }                                                          

    private void MulitCameraRecordingDelayTypeActionPerformed(java.awt.event.ActionEvent evt) {                                                              
        Parent.NumberPanelInteger.Load("Movie Split Size [MB]", Integer.parseInt(MovieSplitSizeField.getText()), MovieSplitSizeField, "Settings3Card");
        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "NumberpanelInteger");
    }                                                             

    private void AudioDevicesActionPerformed(java.awt.event.ActionEvent evt) {                                             
        AudioFormats.removeAllItems();
        if (AudioDevices.getSelectedObjects().length > 0) {
            KeyValue AudioDeviceObject = (KeyValue) (AudioDevices.getSelectedObjects()[0]);
            AudioFormat[] audio_formats = Parent.Utils.SoundRecorder.GetMixerCapabilities(AudioDeviceObject.getKey());
            if (audio_formats != null) {
                for (int i = 0; i < audio_formats.length; i++) {
                    String line = "";
                    if (audio_formats[i].getSampleRate() == -1) {
                        line += "Samplerate: any";
                    } else {
                        line += "Samplerate: " + audio_formats[i].getSampleRate();
                    }
                    line += " | Bits: " + audio_formats[i].getSampleSizeInBits();
                    line += " | Channels: " + audio_formats[i].getChannels();
                    KeyValue entry = new KeyValue(i, line);
                    AudioFormats.addItem(entry);
                }
            }
        }
    }                                            

private void LiveVideoEnabledButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                       
    LiveVideoEnabledButton.ToggleChecked();
    if (LiveVideoEnabledButton.isChecked()) {
        LiveVideoEnabledButton.setText("Enabled");
    } else {
        LiveVideoEnabledButton.setText("Disabled");
    }
}                                                      

private void MovieSplitDurationFieldCaretUpdate(javax.swing.event.CaretEvent evt) {                                                    
// TODO add your handling code here:
}                                                   

private void MovieSplitDurationTypeActionPerformed(java.awt.event.ActionEvent evt) {                                                       
    Parent.NumberPanelInteger.Load("Movie Split Duration [seconds]", Integer.parseInt(MovieSplitDurationField.getText()), MovieSplitDurationField, "Settings3Card");
    CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
    cl.show(Parent.GetCardManager(), "NumberpanelInteger");
}                                                      

private void MovieSplitFramesFieldCaretUpdate(javax.swing.event.CaretEvent evt) {                                                  
// TODO add your handling code here:
}                                                 

private void MovieSplitFramesTypeActionPerformed(java.awt.event.ActionEvent evt) {                                                     
    Parent.NumberPanelInteger.Load("Movie Split Frames", Integer.parseInt(MovieSplitFramesField.getText()), MovieSplitFramesField, "Settings3Card");
    CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
    cl.show(Parent.GetCardManager(), "NumberpanelInteger");
}                                                    

    private void MasterCameraNameFieldCaretUpdate(javax.swing.event.CaretEvent evt) {                                                  
        // TODO add your handling code here:
    }                                                 

    private void SlaveCameraNameFieldCaretUpdate(javax.swing.event.CaretEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void SingleCameraNameFieldCaretUpdate(javax.swing.event.CaretEvent evt) {                                                  
        // TODO add your handling code here:
    }                                                 

    private void ePanel1MouseDragged(java.awt.event.MouseEvent evt) {                                     
        int delta_dragY = mousedragstartpointY - evt.getY(); // in pixels
        float speed_factor = 6;
        int scrollvalueY = panelstartpointY + (int) (speed_factor * (float) delta_dragY / (float) ePanel1.getHeight() * 100.0f);

        /*        Parent.WriteLogtoConsole("mousedragstartpointY: " + mousedragstartpointY);
        Parent.WriteLogtoConsole("scrollvalueY: " + scrollvalueY);
        Parent.WriteLogtoConsole("delta_dragY: " + delta_dragY);
        Parent.WriteLogtoConsole("delta_dragY / ePanel1.getHeight() * 100: " + (int) ((float) delta_dragY / (float) ePanel1.getHeight() * 100.0f));
         */
        JScrollBar verticalScrollBar = jScrollPane1.getVerticalScrollBar();
        verticalScrollBar.setValue(Utils.MinMaxRange(scrollvalueY, verticalScrollBar.getMinimum(), verticalScrollBar.getMaximum()));
    }                                    
    int mousedragstartpointY = 0;
    int panelstartpointY = 0;
    private void ePanel1MousePressed(java.awt.event.MouseEvent evt) {                                     
        mousedragstartpointY = evt.getY();
        JScrollBar verticalScrollBar = jScrollPane1.getVerticalScrollBar();
        panelstartpointY = verticalScrollBar.getValue();
    }                                    
    // Variables declaration - do not modify                     
    private javax.swing.JComboBox AudioDevices;
    private javax.swing.JComboBox AudioFormats;
    private javax.swing.JPanel ConfirmationPanel;
    private EButton GuidesMenuButton1;
    private EButton LiveVideoEnabledButton;
    private javax.swing.JLabel LiveVideoLabel;
    private javax.swing.JLabel LiveVideoLabel1;
    private javax.swing.JLabel LiveVideoLabel2;
    private javax.swing.JLabel LiveVideoLabel3;
    private javax.swing.JTextField MasterCameraNameField;
    private EPanel MasterCameraPanel;
    private javax.swing.JTextField MovieSplitDurationField;
    private EButton MovieSplitDurationType;
    private javax.swing.JTextField MovieSplitFramesField;
    private EButton MovieSplitFramesType;
    private javax.swing.JTextField MovieSplitSizeField;
    private javax.swing.JLabel MovieSplitSizeLabel;
    private javax.swing.JLabel MovieSplitSizeLabel1;
    private javax.swing.JLabel MovieSplitSizeLabel2;
    private EButton MovieSplitSizeType;
    private javax.swing.JLabel MulitCameraRecordingDelay;
    private javax.swing.JLabel MulitCameraRecordingDelay1;
    private javax.swing.JLabel MulitCameraRecordingDelay2;
    private EButton MulitCameraRecordingDelayType;
    private javax.swing.JTextField MultiCameraRecordingDelayField;
    private javax.swing.JPanel NavigationPanel1;
    private EButton PhotoSettingsMenu;
    private EButton SettingsCancelButton;
    private EButton SettingsMenu1Button1;
    private EButton SettingsMenu2Button1;
    private EButton SettingsMenu3Button;
    private EButton SettingsOKButton;
    private javax.swing.JTextField SingleCameraNameField;
    private EPanel SingleCameraPanel;
    private javax.swing.JTextField SlaveCameraNameField;
    private EPanel SlaveCameraPanel;
    private javax.swing.JPanel bg;
    private EPanel ePanel1;
    private EPanel ePanel2;
    private EPanel ePanel3;
    private EPanel ePanel4;
    private EPanel ePanel5;
    private EPanel ePanel6;
    private EPanel ePanel7;
    private EPanel ePanel8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration                   
}
