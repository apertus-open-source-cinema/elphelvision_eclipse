/*! Copyright (C) 2009 Apertus, All Rights Reserved
 *! Author : Apertus Team
-----------------------------------------------------------------------------**
 *!
 *!  This program is free software: you can redistribute it and/or modify
 *!  it under the terms of the GNU General Public License as published by
 *!  the Free Software Foundation, either version 3 of the License, or
 *!  (at your option) any later version.
 *!
 *!  This program is distributed in the hope that it will be useful,
 *!  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *!  GNU General Public License for more details.
 *!
 *!  You should have received a copy of the GNU General Public License
 *!  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *!
-----------------------------------------------------------------------------**/

import java.awt.CardLayout;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.util.logging.Level;
import java.util.logging.Logger;



public class PhotoSettingsLayout extends javax.swing.JPanel {

    ElphelVision Parent;

    public PhotoSettingsLayout(ElphelVision parent) {
        Parent = parent;

        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {

                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void Load() {
        if (Parent.Camera.GetPhotoresolution() == PhotoResolution.FULL) {
            ResolutionFull.setChecked(true);
            ResolutionAsVideo.setChecked(false);
        }
        if (Parent.Camera.GetPhotoresolution() == PhotoResolution.ASVIDEO) {
            ResolutionAsVideo.setChecked(true);
            ResolutionFull.setChecked(false);
        }
        if (Parent.Camera.GetPhotoColorMode() == ColorMode.RGB) {
            ColorModeRGB.setChecked(true);
            ColorModeJP4.setChecked(false);
        }
        if (Parent.Camera.GetPhotoColorMode() == ColorMode.JP4) {
            ColorModeRGB.setChecked(false);
            ColorModeJP4.setChecked(true);
        }

        PhotoQualityField.setText(Parent.Camera.GetPhotoQuality() + "");

        if (Parent.Camera.GetAllowCaptureStillWhileRecording()) {
            StillsWhileRecDisable.setChecked(false);
            StillsWhileRecAllow.setChecked(true);
        } else {
            StillsWhileRecDisable.setChecked(true);
            StillsWhileRecAllow.setChecked(false);
        }
    }

    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        NavigationPanel1 = new javax.swing.JPanel();
        SettingsMenu1Button1 = new EButton(Parent);
        SettingsMenu2Button1 = new EButton(Parent);
        GuidesMenuButton1 = new EButton(Parent);
        SettingsMenu3Button = new EButton(Parent);
        PhotoSettingsMenu = new EButton(Parent);
        PhotoSettings = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ResolutionAsVideo = new EButton(Parent);
        MovieSplitSizeLabel = new javax.swing.JLabel();
        PhotoQualityField = new javax.swing.JTextField();
        PhotoQualityType = new EButton(Parent);
        ResolutionFull = new EButton(Parent);
        jLabel2 = new javax.swing.JLabel();
        ColorModeRGB = new EButton(Parent);
        ColorModeJP4 = new EButton(Parent);
        jLabel3 = new javax.swing.JLabel();
        StillsWhileRecAllow = new EButton(Parent);
        StillsWhileRecDisable = new EButton(Parent);
        SettingsCancelButton = new EButton(Parent);

        bg.setBackground(new java.awt.Color(0, 0, 0));
        bg.setPreferredSize(new java.awt.Dimension(1024, 600));

        NavigationPanel1.setBackground(java.awt.Color.black);

        SettingsMenu1Button1.setText("Settings Tab 1");
        SettingsMenu1Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsMenu1Button1ActionPerformed(evt);
            }
        });

        SettingsMenu2Button1.setText("Settings Tab 2");
        SettingsMenu2Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsMenu2Button1ActionPerformed(evt);
            }
        });

        GuidesMenuButton1.setText("Guides");
        GuidesMenuButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuidesMenuButton1ActionPerformed(evt);
            }
        });

        SettingsMenu3Button.setText("Settings Tab 3");
        SettingsMenu3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsMenu3ButtonActionPerformed(evt);
            }
        });

        PhotoSettingsMenu.setText("Photo Settings");
        PhotoSettingsMenu.setChecked(true);
        PhotoSettingsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhotoSettingsMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NavigationPanel1Layout = new javax.swing.GroupLayout(NavigationPanel1);
        NavigationPanel1.setLayout(NavigationPanel1Layout);
        NavigationPanel1Layout.setHorizontalGroup(
            NavigationPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavigationPanel1Layout.createSequentialGroup()
                .addComponent(SettingsMenu1Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SettingsMenu2Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SettingsMenu3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(GuidesMenuButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PhotoSettingsMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        NavigationPanel1Layout.setVerticalGroup(
            NavigationPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavigationPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(SettingsMenu1Button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(SettingsMenu2Button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(SettingsMenu3Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(GuidesMenuButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(PhotoSettingsMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        PhotoSettings.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 0, 14));
        jLabel1.setForeground(new java.awt.Color(254, 254, 254));
        jLabel1.setText("Resolution");

        ResolutionAsVideo.setText("as Video");
        ResolutionAsVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResolutionAsVideoActionPerformed(evt);
            }
        });

        MovieSplitSizeLabel.setFont(new java.awt.Font("DejaVu Sans", 0, 14));
        MovieSplitSizeLabel.setForeground(new java.awt.Color(255, 255, 255));
        MovieSplitSizeLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MovieSplitSizeLabel.setText("Photo Quality");
        MovieSplitSizeLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        MovieSplitSizeLabel.setAlignmentY(0.0F);
        MovieSplitSizeLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        MovieSplitSizeLabel.setIconTextGap(0);
        MovieSplitSizeLabel.setInheritsPopupMenu(false);
        MovieSplitSizeLabel.setRequestFocusEnabled(false);
        MovieSplitSizeLabel.setVerifyInputWhenFocusTarget(false);
        MovieSplitSizeLabel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        PhotoQualityField.setBackground(new java.awt.Color(0, 0, 0));
        PhotoQualityField.setForeground(new java.awt.Color(255, 255, 255));
        PhotoQualityField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PhotoQualityField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        PhotoQualityField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                PhotoQualityFieldCaretUpdate(evt);
            }
        });

        PhotoQualityType.setText("type");
        PhotoQualityType.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        PhotoQualityType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhotoQualityTypeActionPerformed(evt);
            }
        });

        ResolutionFull.setText("Full");
        ResolutionFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResolutionFullActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 0, 14));
        jLabel2.setForeground(new java.awt.Color(254, 254, 254));
        jLabel2.setText("Color Mode");

        ColorModeRGB.setText("RGB");
        ColorModeRGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColorModeRGBActionPerformed(evt);
            }
        });

        ColorModeJP4.setText("JP4 RAW");
        ColorModeJP4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColorModeJP4ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        jLabel3.setForeground(new java.awt.Color(254, 254, 254));
        jLabel3.setText("<html>\nCapture Stills<br/>\nWhile Recording<br/>\nVideo\n</html>\n");

        StillsWhileRecAllow.setText("Allow");
        StillsWhileRecAllow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StillsWhileRecAllowActionPerformed(evt);
            }
        });

        StillsWhileRecDisable.setText("Disable");
        StillsWhileRecDisable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StillsWhileRecDisableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PhotoSettingsLayout = new javax.swing.GroupLayout(PhotoSettings);
        PhotoSettings.setLayout(PhotoSettingsLayout);
        PhotoSettingsLayout.setHorizontalGroup(
            PhotoSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PhotoSettingsLayout.createSequentialGroup()
                .addGroup(PhotoSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PhotoSettingsLayout.createSequentialGroup()
                        .addGroup(PhotoSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(MovieSplitSizeLabel)
                            .addComponent(jLabel2))
                        .addGap(22, 22, 22)
                        .addGroup(PhotoSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PhotoSettingsLayout.createSequentialGroup()
                                .addComponent(ResolutionFull, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ResolutionAsVideo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PhotoSettingsLayout.createSequentialGroup()
                                .addGroup(PhotoSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(PhotoQualityField)
                                    .addComponent(ColorModeRGB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(PhotoSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PhotoQualityType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ColorModeJP4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(PhotoSettingsLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StillsWhileRecAllow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(StillsWhileRecDisable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(192, 192, 192))
        );
        PhotoSettingsLayout.setVerticalGroup(
            PhotoSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PhotoSettingsLayout.createSequentialGroup()
                .addGroup(PhotoSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ResolutionFull, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ResolutionAsVideo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PhotoSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ColorModeRGB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ColorModeJP4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PhotoSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MovieSplitSizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PhotoQualityField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PhotoQualityType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PhotoSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PhotoSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(StillsWhileRecAllow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(StillsWhileRecDisable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        SettingsCancelButton.setText("Close");
        SettingsCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PhotoSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(NavigationPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 372, Short.MAX_VALUE)
                        .addComponent(SettingsCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PhotoSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 290, Short.MAX_VALUE)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SettingsCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NavigationPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SettingsCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SettingsCancelButtonActionPerformed
        try { // Save to config file
            Parent.Camera.WriteConfigFile("autosave.config");
        } catch (IOException ex) {
            Logger.getLogger(Settings1Layout.class.getName()).log(Level.SEVERE, null, ex);
        }
        Parent.StopVideoPlayer();
        Parent.LoadMainCard();
    }//GEN-LAST:event_SettingsCancelButtonActionPerformed

    private void SettingsMenu1Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SettingsMenu1Button1ActionPerformed
        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "Settings1Card");
        Parent.StopVideoPlayer();
}//GEN-LAST:event_SettingsMenu1Button1ActionPerformed

    private void SettingsMenu2Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SettingsMenu2Button1ActionPerformed
        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "Settings2Card");
        Parent.Settings2CardLayout.Load();
}//GEN-LAST:event_SettingsMenu2Button1ActionPerformed

    private void GuidesMenuButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuidesMenuButton1ActionPerformed
        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "GuidesCard");
        Parent.GuidesPanel.Load();
}//GEN-LAST:event_GuidesMenuButton1ActionPerformed

    private void SettingsMenu3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SettingsMenu3ButtonActionPerformed
        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "Settings3Card");
        Parent.Settings3CardLayout.Load();
}//GEN-LAST:event_SettingsMenu3ButtonActionPerformed

    private void PhotoSettingsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhotoSettingsMenuActionPerformed
}//GEN-LAST:event_PhotoSettingsMenuActionPerformed

    private void ColorModeJP4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColorModeJP4ActionPerformed
        ColorModeJP4.setChecked(true);
        ColorModeRGB.setChecked(false);

        Parent.Camera.SetPhotoColorMode(ColorMode.JP4);
    }//GEN-LAST:event_ColorModeJP4ActionPerformed

    private void ColorModeRGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColorModeRGBActionPerformed
        ColorModeJP4.setChecked(false);
        ColorModeRGB.setChecked(true);

        Parent.Camera.SetPhotoColorMode(ColorMode.RGB);
    }//GEN-LAST:event_ColorModeRGBActionPerformed

    private void ResolutionFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResolutionFullActionPerformed
        ResolutionFull.setChecked(true);
        ResolutionAsVideo.setChecked(false);

        Parent.Camera.SetPhotoresolution(PhotoResolution.FULL);
    }//GEN-LAST:event_ResolutionFullActionPerformed

    private void ResolutionAsVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResolutionAsVideoActionPerformed
        ResolutionFull.setChecked(false);
        ResolutionAsVideo.setChecked(true);

        Parent.Camera.SetPhotoresolution(PhotoResolution.ASVIDEO);
    }//GEN-LAST:event_ResolutionAsVideoActionPerformed

    private void PhotoQualityFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_PhotoQualityFieldCaretUpdate
        if (Integer.parseInt(PhotoQualityField.getText()) > 100) {
            PhotoQualityField.setText("100");
        }
        if (Integer.parseInt(PhotoQualityField.getText()) < 0) {
            PhotoQualityField.setText("0");
        }

        Parent.Camera.SetPhotoQuality(Integer.parseInt(PhotoQualityField.getText()));
}//GEN-LAST:event_PhotoQualityFieldCaretUpdate

    private void PhotoQualityTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhotoQualityTypeActionPerformed
        Parent.NumberPanelInteger.Load("Photo Quality", Integer.parseInt(PhotoQualityField.getText()), PhotoQualityField, "PhotoSettings");
        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "NumberpanelInteger");
}//GEN-LAST:event_PhotoQualityTypeActionPerformed

    private void StillsWhileRecAllowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StillsWhileRecAllowActionPerformed
        StillsWhileRecDisable.setChecked(false);
        StillsWhileRecAllow.setChecked(true);

        Parent.Camera.SetAllowCaptureStillWhileRecording(true);
    }//GEN-LAST:event_StillsWhileRecAllowActionPerformed

    private void StillsWhileRecDisableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StillsWhileRecDisableActionPerformed
        StillsWhileRecDisable.setChecked(true);
        StillsWhileRecAllow.setChecked(false);

        Parent.Camera.SetAllowCaptureStillWhileRecording(false);
    }//GEN-LAST:event_StillsWhileRecDisableActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private EButton ColorModeJP4;
    private EButton ColorModeRGB;
    private EButton GuidesMenuButton1;
    private javax.swing.JLabel MovieSplitSizeLabel;
    private javax.swing.JPanel NavigationPanel1;
    private javax.swing.JTextField PhotoQualityField;
    private EButton PhotoQualityType;
    private javax.swing.JPanel PhotoSettings;
    private EButton PhotoSettingsMenu;
    private EButton ResolutionAsVideo;
    private EButton ResolutionFull;
    private EButton SettingsCancelButton;
    private EButton SettingsMenu1Button1;
    private EButton SettingsMenu2Button1;
    private EButton SettingsMenu3Button;
    private EButton StillsWhileRecAllow;
    private EButton StillsWhileRecDisable;
    private javax.swing.JPanel bg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
